@page "/qualitypage"
@inject HttpClient http

    <h3>Raport jakościowy banknotów</h3>



    @*@if (qdr == null)
    {
        <text> Loading... </text>
    }
    else if (qdr.Length == 0)
    {
        <text> There are no records in the database </text>
    }
    else
    {
        <table class="table" style="border-bottom-color">
            <thead>
                <tr>
                    <th>Id.</th>
                    <th>Wrt. nominału</th>
                    <th>Łączna ilość nominału</th>
                    <th>Ilość z kryterium</th>
                    <th>Kryterium</th>
                    <th>Waluta</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var q in qdr)
                {
                    <tr>
                        <td>
                                <a class="btn btn-success">Edit</a>
                                <button class="btn btn-danger">Delete</button>
                            </td>
                        <td>@q.IdCurrencyFaceValue</td>
                        <td>@q.FaceValue</td>
                        <td><b> @q.CountedCount.ToString("### ### ### ###")</b> </td>
                        <td>@q.Count.ToString("### ### ### ###")</td>
                        <td>@q.QualityValue</td>
                        <td>@q.Symbol</td>

                    </tr>
                }
            </tbody>
        </table>*@




@code {
    QualityDetailReportDTO[] qdr { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    async Task LoadData()
    {
        await Task.Delay(3000);
        qdr = await http.GetJsonAsync<QualityDetailReportDTO[]>("api/QualityDetail/Get/2/1/2020-01-01/2020-05-01");
      
    }
}

@page "/qualitypage"
@inject HttpClient http

@if (qdr == null)
{
    <LoadingData DisplayMessage="false"></LoadingData>
}
else if (qdr.Length == 0)
{
    <text> Brak danych do wyświetlenia </text>
}
else
{
    <h3>Raport jakościowy banknotów</h3>
    <br />
      <TableTemplate ReportItems="qdr">
          <TableHeader>
              <th><b>Wrt. nominału</b></th>
              <th><b>Łączna ilość nominału</b></th>
              <th><b>Ilość z kryterium</b></th>
              <th><b>Kryterium</b></th>
              <th><b>Waluta</b></th>
              <th><b>Tryb</b></th>
          </TableHeader>
          <RowTemplate Context="quality">
              <tr>
                  <td><b>@quality.FaceValue</b> </td>
                  <td><b>@quality.CountedCount.ToString("### ### ### ###")</b> </td>
                  <td><b>@quality.Count.ToString("### ### ### ###")</b> </td>
                  <td><b>@quality.QualityValue</b> </td>
                  <td><b>@quality.Symbol</b> </td>
                  <td><b>@quality.ModeValue</b> </td>
              </tr>
          </RowTemplate>
      </TableTemplate>

    <br />

    <nav class="nav nav-pills flex-column flex-sm-row">
        <a class="flex-sm-fill text-sm-center nav-link active" href="/reportstochoose">Wróć do poprzedniej storny</a>
    </nav>
}





@code {
    QualityDetailReportDTO[] qdr { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    async Task LoadData()
    {
        qdr = await http.GetJsonAsync<QualityDetailReportDTO[]>("api/QualityDetail/Get/3/2/2020-01-01/2020-04-01");

    }
}
